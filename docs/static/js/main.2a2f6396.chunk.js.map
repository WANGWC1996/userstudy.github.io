{"version":3,"sources":["actions/index.js","reducers/index.js","utils.js","components/Welcome.js","components/Question.js","components/Histogram.js","components/three.js","components/ConvexHull.js","components/Legend.js","components/PreferenceSpace.js","components/Visuals.js","components/Stats.js","components/Interaction.js","components/Result.js","components/App.js","index.js"],"names":["setActiveComponent","component","type","combineReducers","activeComponent","state","arguments","length","undefined","action","points","labels","attributes","candidates","mask","forEach","_ref","_ref2","_slicedToArray","attr","_objectSpread","prunedPoints","indices","map","idx","step","concat","_toConsumableArray","leftPoints","filter","indexOf","numLeftPoints","prev","mode","vertices","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","parsePoints","text","trim","split","line","str","parseFloat","parseLabels","loadDataset","_asyncToGenerator","_callee","pointsURL","labelsURL","response","_context","fetch","t0","t1","t2","t3","_x","_x2","apply","selectCandidates","ranges","maxPoints","low","high","point","isValid","j","array2Vector2D","array","vector","window","Module","VecVecDouble","arr","vec","VectorDouble","x","push_back","delete","vector2Array2D","size","get","vector2Array","getPrunedIndices","prevIndices","currIndices","prunedIndices","Welcome","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","handleStart","_this$props$attribute","config","range","inputs","current","alert","test","parseInt","startAlgorithm","handleModeChange","event","changeMode","target","React","createRef","_createClass","_this2","trs","_ref3","_ref4","disabled","createElement","className","placeholder","ref","checked","onChange","toggleMask","id","htmlFor","style","maxWidth","width","onClick","Component","connect","_ref5","dispatch","setCandidates","_defineProperty","SIMPLEX","RANDOM","Question","choose","option","runner","convexHullVertices","readConvexHullVertices","updateConvexHull","getCandidatesIndices","questioNo","prunePoints","stopInteraction","nextPair","setState","pair","showResult","smallerBetter","VectorInt","candidatesVec","AlgorithmRunner","setLeftPoints","ths","tds","data-toggle","title","Histogram","_onMouseLeave","hintValue","_onNearestX","index","data","height","FlexibleXYPlot","onMouseLeave","XAxis","tickValues","tickFormat","toString","ticks","fill","YAxis","ChartLabel","includeMargin","xPercent","yPercent","transform","textAnchor","VerticalBarSeries","color","onNearestX","animation","Hint","y","num","THREE","require","SCALE","FACTOR","ConvexHull","_len","args","Array","_key","drawGeometry","vertex","scaled_vertex","_construct","Vector3","geometry","ConvexGeometry","material","MeshBasicMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","opacity","transparent","mesh","Mesh","geo","EdgesGeometry","mat","LineBasicMaterial","linewidth","wireframe","LineSegments","add","scene","addAxes","axes","AxesHelper","typeface","font","Font","Math","PI","sqrt","_mesh$position","_mesh$rotation","position","rotation","shape","generateShapes","ShapeBufferGeometry","side","DoubleSide","set","lines","_line$position","_line$rotation","Geometry","Line","start","frameId","requestAnimationFrame","animate","cancelAnimationFrame","controls","update","renderer","render","camera","mount","clientWidth","clientHeight","Scene","PerspectiveCamera","up","OrbitControls","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","prevProps","remove","dispose","removeChild","alignItems","display","backgroundColor","SlideItem","justifyContent","Legend","settings","dots","infinite","speed","slidesToShow","slidesToScroll","vertical","verticalSwiping","arrows","swipeToSlide","afterChange","changeStartingIndex","verticalAlign","slider","slickPrev","cursor","FontAwesomeIcon","icon","faAngleUp","Slider","assign","slickNext","faAngleDown","PreferenceSpace","updateContextHullVertices","vertext","vert","top","left","Visuals","minWidth","Stats","prunedTrs","leftTrs","classNames","table-fixed","Interaction","restart","th","margin","Result","onRuntimeInitialized","_onRuntimeInitialized","_yield$loadDataset","_yield$loadDataset2","store","createStore","rootReducer","Provider","App","document","getElementById","script","src","body"],"mappings":"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","file":"static/js/main.2a2f6396.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const RESTART = \"RESTART\";\r\nexport const UPDATE_CONVEX_HULL = \"UPDATE_CONVEX_HULL\";\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (points, labels, attributes) => ({\r\n  type: SET_DATASET,\r\n  points,\r\n  labels,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const prunePoints = (indices, step) => ({\r\n  type: PRUNE_POINTS,\r\n  indices,\r\n  step\r\n});\r\n\r\nexport const setLeftPoints = indices => ({\r\n  type: SET_LEFT_POINTS,\r\n  indices\r\n});\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n\r\nexport const updateConvexHull = vertices => ({\r\n  type: UPDATE_CONVEX_HULL,\r\n  vertices\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART,\r\n  UPDATE_CONVEX_HULL\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// all points in the dataset\r\nconst points = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.points;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the labels of points\r\nconst labels = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the attribute names\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points in the specified ranges.\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// show/hide attributes (this feature is not exposed in the UI)\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points pruned.\r\n// it is an array of [idx, step no.]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      const points = action.indices.map(idx => [idx, action.step]);\r\n      return [...points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of candidate points\r\n// it is an array of indices\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case SET_LEFT_POINTS:\r\n      return action.indices;\r\n    case PRUNE_POINTS:\r\n      return state.filter(idx => action.indices.indexOf(idx) === -1);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.indices.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.indices.length];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the algorithm to select a pair of points.\r\nconst mode = (state = \"simplex\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// vertices of the convex hull of the preference space.\r\nconst vertices = (state = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CONVEX_HULL:\r\n      return action.vertices;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  points,\r\n  labels,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode,\r\n  vertices\r\n});\r\n","// read points from a text file\nfunction parsePoints(text) {\n  const points = text\n    .trim()\n    .split(\"\\n\")\n    .slice(1) // the first line is <numOfPoints> <dimension>\n    .map(line =>\n      line\n        .trim()\n        .split(/\\s+/)\n        .map(str => parseFloat(str))\n    );\n  return points;\n}\n\n// read labels from a text file\nfunction parseLabels(text) {\n  const labels = text.trim().split(\"\\n\");\n  return labels;\n}\n\n// check if val is in the range [low, high].\nfunction isInRange(val, low, high) {\n  return low <= val && val <= high;\n}\n\n// get the range of each attribute in a set of points.\nexport const getRanges = points => {\n  const ranges = points[0].map(x => ({ low: x, high: x }));\n  points.slice(1).forEach(point => {\n    point.forEach((x, i) => {\n      ranges[i].low = Math.min(ranges[i].low, x);\n      ranges[i].high = Math.max(ranges[i].high, x);\n    });\n  });\n  return ranges;\n};\n\n// load a dataset by reading its points and labels.\nexport const loadDataset = async (pointsURL, labelsURL) => {\n  let response = await fetch(pointsURL);\n  const points = parsePoints(await response.text());\n  if (labelsURL === undefined) {\n    return points;\n  }\n  response = await fetch(labelsURL);\n  const labels = parseLabels(await response.text());\n  return [points, labels];\n};\n\n// get points that are in the specified ranges.\nexport const selectCandidates = (points, ranges, mask, maxPoints) => {\n  const candidates = [];\n  for (let i = 0; i < points.length; ++i) {\n    if (candidates.length >= maxPoints) break;\n    const point = points[i];\n    let isValid = true;\n    for (let j = 0; j < point.length; ++j) {\n      if (mask[j] && !isInRange(point[j], ranges[j][0], ranges[j][1])) {\n        isValid = false;\n        break;\n      }\n    }\n    if (isValid) candidates.push(point);\n  }\n  return candidates;\n};\n\n// convert a JS array to a C++ 2D vector\nexport const array2Vector2D = array => {\n  const vector = new window.Module.VecVecDouble();\n  array.forEach(arr => {\n    const vec = new window.Module.VectorDouble();\n    arr.forEach(x => vec.push_back(x));\n    vector.push_back(vec);\n    vec.delete();\n  });\n  return vector;\n};\n\n// convert a C++ 2D vector to a JS array\nexport const vector2Array2D = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    const vec = vector.get(i);\n    const arr = [];\n    for (let j = 0; j < vec.size(); ++j) arr.push(vec.get(j));\n    array.push(arr);\n  }\n  return array;\n};\n\n// convert a C++ vector to a JS array\nexport const vector2Array = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    array.push(vector.get(i));\n  }\n  return array;\n};\n\n// get the indices of points pruned.\n// both prevIndices and currIndices need to be sorted.\nexport const getPrunedIndices = (prevIndices, currIndices) => {\n  let prunedIndices = [];\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size(); ) {\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\n      prunedIndices.push(prevIndices.get(i));\n      ++i;\n    } else {\n      ++i;\n      ++j;\n    }\n  }\n  return prunedIndices;\n};\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputs = {};\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      this.inputs[attr] = [React.createRef(), React.createRef()];\r\n    });\r\n    this.inputs.maxPoints = React.createRef();\r\n  }\r\n\r\n  handleStart = () => {\r\n    const ranges = [];\r\n    const mask = [];\r\n    for (let i = 0; i < this.props.attributes.length; ++i) {\r\n      const [attr, config] = this.props.attributes[i];\r\n      const range = [config.low, config.high];\r\n      if (this.props.mask[attr]) {\r\n        for (let j = 0; j < 2; ++j) {\r\n          const str = this.inputs[attr][j].current.value.trim();\r\n          if (str === \"\") continue;\r\n          else if (isNaN(str)) {\r\n            alert(`${str} in range of ${attr} is not an integer`);\r\n            return;\r\n          } else {\r\n            range[j] = parseFloat(str);\r\n          }\r\n        }\r\n      }\r\n      ranges.push(range);\r\n      mask.push(this.props.mask[attr]);\r\n    }\r\n    let maxPoints;\r\n    const str = this.inputs.maxPoints.current.value.trim();\r\n    if (str === \"\") maxPoints = 1000;\r\n    else if (/\\d+/.test(str)) maxPoints = parseInt(str);\r\n    else {\r\n      alert(`${str} for Max No. of Cars is not an integer`);\r\n      return;\r\n    }\r\n    const candidates = selectCandidates(\r\n      this.props.points,\r\n      ranges,\r\n      mask,\r\n      maxPoints\r\n    );\r\n    if (candidates.length === 0) {\r\n      alert(\"No matching cars, try larger ranges\");\r\n      return;\r\n    }\r\n    this.props.startAlgorithm(candidates);\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const trs = this.props.attributes.map(([attr, config]) => {\r\n      const disabled = this.props.mask[attr] === 0;\r\n      const { low, high } = config;\r\n      return (\r\n        <tr key={attr}>\r\n          <td className=\"align-middle\">{attr}</td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={low}\r\n              ref={this.inputs[attr][0]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={high}\r\n              ref={this.inputs[attr][1]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle hidden\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={disabled}\r\n              onChange={() =>\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    trs.push(\r\n      <tr key=\"other\">\r\n        <td className=\"align-middle font-weight-bold\">Max No. of Cars</td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"1000\"\r\n            ref={this.inputs.maxPoints}\r\n          />\r\n        </td>\r\n        <td>\r\n          <div className=\"col form-inline align-items-center\">\r\n            <label className=\"mr-4 col-form-label font-weight-bold\">Mode</label>\r\n            <div className=\"mr-3 form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"simplex\"\r\n                value=\"simplex\"\r\n                checked={this.props.mode === \"simplex\"}\r\n                onChange={this.handleModeChange}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"simplex\">\r\n                Simplex\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"random\"\r\n                value=\"random\"\r\n                checked={this.props.mode === \"random\"}\r\n                onChange={this.handleModeChange}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"random\">\r\n                Random\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td />\r\n      </tr>\r\n    );\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\r\n        <h1>Find Your Favorite!</h1>\r\n        <p className=\"lead text-muted\">\r\n          This is a demostration of an interactive system for finding your\r\n          favorite car in a used car database. <br />\r\n          Enter your acceptable range for each attribute (leave blank to use the\r\n          default). <br />\r\n          You will be presented two cars each time and you need to choose the\r\n          one you favor more. <br />\r\n          Click the \"Start\" button to find your favorite car in the database!{\" \"}\r\n          <br />\r\n        </p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"align-middle\">Attribute</th>\r\n              <th>Lower bound</th>\r\n              <th>Upper bound</th>\r\n              <th className=\"hidden\">Discard</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"8rem\" }}\r\n            onClick={this.handleStart}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  points,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startAlgorithm: candidates => {\r\n    dispatch(setCandidates(candidates));\r\n    dispatch(setActiveComponent(\"Interaction\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  setLeftPoints,\r\n  prunePoints,\r\n  updateConvexHull\r\n} from \"../actions\";\r\nimport {\r\n  array2Vector2D,\r\n  vector2Array,\r\n  getPrunedIndices,\r\n  vector2Array2D\r\n} from \"../utils\";\r\n\r\nconst SIMPLEX = 2;\r\nconst RANDOM = 1;\r\n\r\n// iteratively ask the user to choose the preferred car from a pair of cars.\r\nclass Question extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const smallerBetter = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    const candidatesVec = array2Vector2D(this.props.candidates);\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      candidatesVec,\r\n      smallerBetter,\r\n      this.props.mode === \"random\" ? RANDOM : SIMPLEX\r\n    );\r\n    candidatesVec.delete();\r\n    this.prevIndices = this.runner.getCandidatesIndices();\r\n    this.props.setLeftPoints(vector2Array(this.prevIndices));\r\n    if (this.prevIndices.size() < 2) {\r\n      this.state = { pair: [] };\r\n      this.stopInteraction();\r\n    } else {\r\n      const vec = window.Module.readConvexHullVertices();\r\n      const convexHullVertices = vector2Array2D(vec);\r\n      vec.delete();\r\n      this.props.updateConvexHull(convexHullVertices);\r\n      const indices = this.runner.nextPair();\r\n      this.state = {\r\n        pair: vector2Array(indices)\r\n      };\r\n    }\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    this.runner.choose(option);\r\n    const convexHullVertices = vector2Array2D(\r\n      window.Module.readConvexHullVertices()\r\n    );\r\n    this.props.updateConvexHull(convexHullVertices);\r\n    const currIndices = this.runner.getCandidatesIndices();\r\n    const prunedIndices = getPrunedIndices(this.prevIndices, currIndices);\r\n    const questioNo = this.props.numLeftPoints.length;\r\n    this.props.prunePoints(prunedIndices, questioNo);\r\n    this.prevIndices.delete();\r\n    this.prevIndices = currIndices;\r\n    if (currIndices.size() < 2) {\r\n      this.stopInteraction();\r\n    } else {\r\n      const indices = this.runner.nextPair();\r\n      this.setState({\r\n        pair: vector2Array(indices)\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    this.prevIndices.delete();\r\n    this.runner.delete();\r\n    this.props.showResult();\r\n  };\r\n\r\n  render() {\r\n    const ths = [<th key=\"Option No.\">Option</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    ths.push(<th key=\"chooseButton\" />);\r\n\r\n    const trs = this.state.pair.map((idx, i) => {\r\n      const tds = [<td key=\"Option No.\">{i + 1}</td>];\r\n      this.props.candidates[idx].forEach((x, j) => {\r\n        tds.push(<td key={j}>{x}</td>);\r\n      });\r\n      tds.push(\r\n        <td key=\"chooseButton\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={() => this.choose(i)}\r\n          >\r\n            Choose\r\n          </button>\r\n        </td>\r\n      );\r\n      return (\r\n        <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n          {tds}\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <h2>Your Choice</h2>\r\n        <h4>\r\n          Q{this.props.numLeftPoints.length}: Choose the Car You Favor More\r\n          among the Following Options\r\n        </h4>\r\n        <div className=\"row justify-content-center align-items-center\">\r\n          <div className=\"col-md-8\">\r\n            <table className=\"table table-hover text-center\">\r\n              <thead>\r\n                <tr>{ths}</tr>\r\n              </thead>\r\n              <tbody>{trs}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.stopInteraction}\r\n            >\r\n              Stop\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numLeftPoints,\r\n  mode\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numLeftPoints,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: () => {\r\n    dispatch(setActiveComponent(\"Result\"));\r\n  },\r\n  setLeftPoints: indices => {\r\n    dispatch(setLeftPoints(indices));\r\n  },\r\n  prunePoints: (indices, step) => {\r\n    dispatch(prunePoints(indices, step));\r\n  },\r\n  updateConvexHull: vertices => {\r\n    dispatch(updateConvexHull(vertices));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Question);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  Hint,\n  VerticalBarSeries,\n  ChartLabel\n} from \"react-vis\";\n\n// a histogram to show the number of cars left vs the number of questions asked.\nclass Histogram extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hintValue: null\n    };\n  }\n\n  _onMouseLeave = () => {\n    this.setState({\n      hintValue: null\n    });\n  };\n\n  _onNearestX = (value, { index }) => {\n    this.setState({\n      hintValue: this.props.data[index]\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>No. of Cars Left vs. No. of Questions Asked</h4>\n        <div style={{ width: \"25rem\", height: \"25rem\" }}>\n          <FlexibleXYPlot onMouseLeave={this._onMouseLeave}>\n            <XAxis\n              tickValues={this.props.data.map((val, idx) => idx)}\n              tickFormat={value => value.toString()}\n              style={{\n                ticks: { fill: \"black\" }\n              }}\n            />\n            <YAxis\n              style={{\n                ticks: { fill: \"black\" }\n              }}\n            />\n            <ChartLabel\n              text=\"Question No.\"\n              includeMargin={false}\n              xPercent={0.82}\n              yPercent={1.06}\n              style={{\n                style: { fill: \"black\" }\n              }}\n            />\n            <ChartLabel\n              text=\"No. of Cars Left\"\n              includeMargin={false}\n              xPercent={-0.01}\n              yPercent={0.05}\n              style={{\n                transform: \"rotate(-90)\",\n                textAnchor: \"end\",\n                style: { fill: \"black\" }\n              }}\n            />\n            <VerticalBarSeries\n              color=\"rgb(0, 123, 255)\"\n              onNearestX={this._onNearestX}\n              data={this.props.data}\n              animation\n            />\n            {this.state.hintValue && (\n              <Hint value={this.state.hintValue}>\n                <p style={{ color: \"black\" }}>\n                  Q{this.state.hintValue.x}: {this.state.hintValue.y} Cars Left\n                </p>\n              </Hint>\n            )}\n          </FlexibleXYPlot>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ numLeftPoints }) => ({\n  data: numLeftPoints.map((num, i) => ({ x: i, y: num }))\n});\n\nexport default connect(mapStateToProps)(Histogram);\n","import * as THREE from \"three\";\nwindow.THREE = THREE;\nrequire(\"three/examples/js/controls/OrbitControls\");\nrequire(\"three/examples/js/QuickHull\");\nrequire(\"three/examples/js/geometries/ConvexGeometry\");\n\nexport default THREE;\n","import React from \"react\";\nimport THREE from \"./three\";\n\nconst SCALE = 100;\nconst FACTOR = 10; // font size = SCALE / FACTOR\n\n// the convex hull of the preference space\nclass ConvexHull extends React.Component {\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.set(1.5 * SCALE, 1.5 * SCALE, 0.5 * SCALE);\n    this.camera.up.set(0, 0, 1);\n    this.controls = new THREE.OrbitControls(this.camera, this.mount);\n    this.controls.update();\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor(0xffffff);\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n    this.addAxes();\n    this.drawGeometry();\n    this.start();\n  }\n\n  drawGeometry = () => {\n    if (this.props.vertices.length < 4) return;\n    const points = this.props.vertices.map(vertex => {\n      const scaled_vertex = vertex.map(x => x * SCALE);\n      return new THREE.Vector3(...scaled_vertex);\n    });\n    const geometry = new THREE.ConvexGeometry(points);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xff0000,\n      //shading: THREE.FlatShading,\n      polygonOffset: true,\n      polygonOffsetFactor: 1, // positive value pushes polygon further away\n      polygonOffsetUnits: 1,\n      opacity: 0.5,\n      transparent: true\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    const geo = new THREE.EdgesGeometry(geometry); // or WireframeGeometry\n    const mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 2 });\n    const wireframe = new THREE.LineSegments(geo, mat);\n    this.mesh.add(wireframe);\n    this.scene.add(this.mesh);\n  };\n\n  addAxes = () => {\n    const axes = new THREE.AxesHelper(1.5 * SCALE);\n    this.scene.add(axes);\n    const typeface = require(\"three/examples/fonts/helvetiker_regular.typeface.json\");\n    const font = new THREE.Font(typeface);\n\n    const numConfig = [\n      // color, position, rotation\n      [\n        0xff0000,\n        [SCALE + SCALE / (FACTOR * 2), 0, 0],\n        [Math.PI / 2, Math.PI, 0]\n      ],\n      [\n        0x00ff00,\n        [0, SCALE - SCALE / (FACTOR * 2), 0],\n        [Math.PI / 2, Math.PI / 2, 0]\n      ],\n      [\n        0x0000ff,\n        [\n          SCALE / (FACTOR * Math.sqrt(2)),\n          -SCALE / (FACTOR * Math.sqrt(2)),\n          SCALE\n        ],\n        [Math.PI / 2, (Math.PI * 3) / 4, 0]\n      ]\n    ];\n\n    numConfig.forEach(([color, position, rotation]) => {\n      const shape = font.generateShapes(\"1\", SCALE / FACTOR);\n      const geometry = new THREE.ShapeBufferGeometry(shape);\n      const mesh = new THREE.Mesh(\n        geometry,\n        new THREE.MeshBasicMaterial({\n          color: color,\n          side: THREE.DoubleSide\n        })\n      );\n      mesh.position.set(...position);\n      mesh.rotation.set(...rotation);\n      this.scene.add(mesh);\n    });\n    window.lines = [];\n    const lineConfig = [\n      [0xff0000, [SCALE, 0, 0], [0, 0, 0]],\n      [0x00ff00, [0, SCALE, 0], [0, 0, -Math.PI / 2]],\n      [0x0000ff, [0, 0, SCALE], [0, 0, -Math.PI / 2]]\n    ];\n    lineConfig.forEach(([color, position, rotation]) => {\n      const material = new THREE.LineBasicMaterial({\n        color\n      });\n      const geometry = new THREE.Geometry();\n      geometry.vertices.push(\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, SCALE / (2 * FACTOR))\n      );\n      const line = new THREE.Line(geometry, material);\n      line.position.set(...position);\n      line.rotation.set(...rotation);\n      this.scene.add(line);\n      window.lines.push(line);\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      if (this.mesh) {\n        this.scene.remove(this.mesh);\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n      }\n      this.drawGeometry();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = window.requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    window.cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: \"25rem\", height: \"25rem\" }}\n        ref={mount => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default ConvexHull;\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Line({ color }) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\"\n      }}\n    >\n      <div style={{ width: \"100%\", height: \"2px\", backgroundColor: color }} />\n    </div>\n  );\n}\n\nfunction SlideItem({ text }) {\n  return (\n    <div\n      style={{\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      }}\n    >\n      {text}\n    </div>\n  );\n}\n\n// show/change the selected attributes for displaying the convex hull\nclass Legend extends React.Component {\n  render() {\n    const settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      vertical: true,\n      verticalSwiping: true,\n      arrows: false,\n      swipeToSlide: true,\n      afterChange: this.props.changeStartingIndex\n    };\n    return (\n      <div\n        title=\"Click the arrows to change the selected attributes for displaying the convex hull.\"\n        style={{\n          width: \"12rem\"\n        }}\n      >\n        <div\n          style={{\n            alignItems: \"center\",\n            width: \"4rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <Line color=\"#ff0000\" />\n          <Line color=\"#00ff00\" />\n          <Line color=\"#0000ff\" />\n        </div>\n        <div\n          style={{\n            width: \"8rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <div\n            onClick={() => this.slider.slickPrev()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleUp} />\n          </div>\n          <Slider {...settings} ref={self => (this.slider = self)}>\n            <SlideItem text=\"Price (USD)\" />\n            <SlideItem text=\"Year\" />\n            <SlideItem text=\"Power (HP)\" />\n            <SlideItem text=\"Used KM\" />\n          </Slider>\n          <div\n            onClick={() => this.slider.slickNext()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleDown} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Legend;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ConvexHull from \"./ConvexHull\";\nimport Legend from \"./Legend\";\n\n// to visualize the preference space.\nclass PreferenceSpace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      convexHullVertices: props.vertices.map(vert => vert.slice(0, 3))\n    };\n  }\n\n  updateContextHullVertices = index => {\n    const convexHullVertices = this.props.vertices.map(vertext => {\n      const vert = [];\n      for (let i = 0; i < 3; ++i) {\n        vert.push(vertext[(i + index) % 4]);\n      }\n      return vert;\n    });\n    this.setState({ convexHullVertices });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      this.updateContextHullVertices(this.state.index);\n    }\n  }\n\n  changeStartingIndex = index => {\n    this.setState({ index });\n    // explicitly pass index to this.updateContextHullVertices\n    // because this.state.index is not updated immediately,\n    // i.e., this.state.index has still the old value at this line.\n    this.updateContextHullVertices(index);\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Convex Hull of Preference Space</h4>\n        <ConvexHull vertices={this.state.convexHullVertices} />\n        <div style={{ position: \"absolute\", top: \"2rem\", left: \"20rem\" }}>\n          <Legend changeStartingIndex={this.changeStartingIndex} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ vertices }) => ({ vertices });\n\nexport default connect(mapStateToProps)(PreferenceSpace);\n","import React from \"react\";\nimport Histogram from \"./Histogram\";\nimport PreferenceSpace from \"./PreferenceSpace\";\n\nfunction Visuals() {\n  return (\n    <div>\n      <h2>Visuals</h2>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <Histogram />\n        </div>\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <PreferenceSpace />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Visuals;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\n// statistics including the number of cars pruned/left.\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map(([idx, step], i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {[step, ...this.props.candidates[idx]].map((x, j) => (\r\n          <td key={j}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((idx, i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {this.props.candidates[idx].map((x, j) => (\r\n          <td key={j}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h2>Statistics</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h4>The No. of Cars Pruned: {this.props.prunedPoints.length}</h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": prunedTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"37rem\"\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>{ths}</tr>\r\n              </thead>\r\n              <tbody>{prunedTrs}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col\">\r\n            <h4>\r\n              The No. of Cars Left in the Database:{\" \"}\r\n              {this.props.leftPoints.length}\r\n            </h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": leftTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"30rem\"\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>{ths.slice(1)}</tr>\r\n              </thead>\r\n              <tbody>{leftTrs}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\nimport Question from \"./Question\";\nimport Visuals from \"./Visuals\";\nimport Stats from \"./Stats\";\n\nfunction Interaction() {\n  return (\n    <div>\n      <Question />\n      <Visuals />\n      <Stats />\n    </div>\n  );\n}\n\nexport default Interaction;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\n// show the number of questions asked and the favourite car/remaining cars.\r\nfunction Result({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints,\r\n  restart\r\n}) {\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((idx, i) => (\r\n    <tr key={i} data-toggle=\"tooltip\" title={labels[idx]}>\r\n      {candidates[idx].map((x, j) => (\r\n        <td key={j}>{x}</td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"justify-content-center\">\r\n      <h4>The Total No. of Questions Asked is: {numLeftPoints.length - 1}.</h4>\r\n      <h4>\r\n        {leftPoints.length === 1\r\n          ? \"Your Favourite Car is:\"\r\n          : `${leftPoints.length} Cars Left in the Database:`}\r\n      </h4>\r\n      <table\r\n        className={classNames(\"table\", \"table-hover\", {\r\n          \"table-fixed\": trs.length > 7\r\n        })}\r\n        style={{\r\n          maxWidth: \"40rem\",\r\n          margin: \"auto\"\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr>{ths}</tr>\r\n        </thead>\r\n        <tbody>{trs}</tbody>\r\n      </table>\r\n      <div className=\"d-flex justify-content-center my-3\">\r\n        <Histogram />\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={restart}>\r\n          Return to Welcome\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Interaction from \"./Interaction\";\r\nimport Result from \"./Result\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ activeComponent }) {\r\n  switch (activeComponent) {\r\n    case \"Welcome\":\r\n      return <Welcome />;\r\n    case \"Interaction\":\r\n      return <Interaction />;\r\n    case \"Result\":\r\n      return <Result />;\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport { loadDataset } from \"./utils\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: async function() {\r\n    const [points, labels] = await loadDataset(\r\n      \"./datasets/cars.txt\",\r\n      \"./datasets/labelsOfCars.txt\"\r\n    );\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config]) => {\r\n      mask[attr] = 1;\r\n    });\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { points, labels, attributes, mask }\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"web.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n"],"sourceRoot":""}