{"ast":null,"code":"import _toConsumableArray from \"/Users/wangweicheng/find-your-favorite/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/wangweicheng/find-your-favorite/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/wangweicheng/find-your-favorite/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { combineReducers } from \"redux\";\nimport { SET_ACTIVE_COMPONENT, SET_DATASET, SET_CANDIDATES, TOGGLE_MASK, SET_LEFT_POINTS, PRUNE_POINTS, SET_MODE, RESTART, UPDATE_CONVEX_HULL } from \"../actions\";\nvar activeComponent = function activeComponent() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Interaction\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_ACTIVE_COMPONENT:\n      return action.component;\n    default:\n      return state;\n  }\n};\n\n// all points in the dataset\nvar points = function points() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_DATASET:\n      return action.points;\n    default:\n      return state;\n  }\n};\n\n// the labels of points\nvar labels = function labels() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_DATASET:\n      return action.labels;\n    default:\n      return state;\n  }\n};\n\n// the attribute names\nvar attributes = function attributes() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_DATASET:\n      return action.attributes;\n    default:\n      return state;\n  }\n};\n\n// the set of points in the specified ranges.\nvar candidates = function candidates() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_CANDIDATES:\n      return action.candidates;\n    default:\n      return state;\n  }\n};\n\n// show/hide attributes (this feature is not exposed in the UI)\nvar mask = function mask() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_DATASET:\n      var _mask = {};\n      action.attributes.forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          attr = _ref2[0],\n          config = _ref2[1];\n        _mask[attr] = 1;\n      });\n      return _mask;\n    case TOGGLE_MASK:\n      return _objectSpread({}, state, action.mask);\n    default:\n      return state;\n  }\n};\n\n// the set of points pruned.\n// it is an array of [idx, step no.]\nvar prunedPoints = function prunedPoints() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case RESTART:\n      return [];\n    case PRUNE_POINTS:\n      var _points = action.indices.map(function (idx) {\n        return [idx, action.step];\n      });\n      return [].concat(_toConsumableArray(_points), _toConsumableArray(state));\n    default:\n      return state;\n  }\n};\n\n// the set of candidate points\n// it is an array of indices\nvar leftPoints = function leftPoints() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case RESTART:\n      return [];\n    case SET_LEFT_POINTS:\n      return action.indices;\n    case PRUNE_POINTS:\n      return state.filter(function (idx) {\n        return action.indices.indexOf(idx) === -1;\n      });\n    default:\n      return state;\n  }\n};\n\n// history of the number of left points\nvar numLeftPoints = function numLeftPoints() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_LEFT_POINTS:\n      return [action.indices.length];\n    case PRUNE_POINTS:\n      var prev = state[state.length - 1];\n      return [].concat(_toConsumableArray(state), [prev - action.indices.length]);\n    default:\n      return state;\n  }\n};\n\n// the algorithm to select a pair of points.\nvar mode = function mode() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"simplex\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_MODE:\n      return action.mode;\n    default:\n      return state;\n  }\n};\n\n// vertices of the convex hull of the preference space.\nvar vertices = function vertices() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case UPDATE_CONVEX_HULL:\n      return action.vertices;\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  activeComponent: activeComponent,\n  points: points,\n  labels: labels,\n  attributes: attributes,\n  candidates: candidates,\n  mask: mask,\n  prunedPoints: prunedPoints,\n  leftPoints: leftPoints,\n  numLeftPoints: numLeftPoints,\n  mode: mode,\n  vertices: vertices\n});","map":{"version":3,"names":["combineReducers","SET_ACTIVE_COMPONENT","SET_DATASET","SET_CANDIDATES","TOGGLE_MASK","SET_LEFT_POINTS","PRUNE_POINTS","SET_MODE","RESTART","UPDATE_CONVEX_HULL","activeComponent","state","arguments","length","undefined","action","type","component","points","labels","attributes","candidates","mask","forEach","_ref","_ref2","_slicedToArray","attr","config","_objectSpread","prunedPoints","indices","map","idx","step","concat","_toConsumableArray","leftPoints","filter","indexOf","numLeftPoints","prev","mode","vertices"],"sources":["/Users/wangweicheng/find-your-favorite/react-app/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART,\r\n  UPDATE_CONVEX_HULL\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Interaction\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// all points in the dataset\r\nconst points = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.points;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the labels of points\r\nconst labels = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the attribute names\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points in the specified ranges.\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// show/hide attributes (this feature is not exposed in the UI)\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points pruned.\r\n// it is an array of [idx, step no.]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      const points = action.indices.map(idx => [idx, action.step]);\r\n      return [...points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of candidate points\r\n// it is an array of indices\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case SET_LEFT_POINTS:\r\n      return action.indices;\r\n    case PRUNE_POINTS:\r\n      return state.filter(idx => action.indices.indexOf(idx) === -1);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.indices.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.indices.length];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the algorithm to select a pair of points.\r\nconst mode = (state = \"simplex\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// vertices of the convex hull of the preference space.\r\nconst vertices = (state = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CONVEX_HULL:\r\n      return action.vertices;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  points,\r\n  labels,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode,\r\n  vertices\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}